# vim: filetype=zsh

v() {
    if [ -z "$PYENV_VIRTUAL_ENV" ]; then
        $EDITOR $@
    else
        # The python LSPs such as `pyright` do not automatically use
        # the auto-activated pyenv virtualenv.
        # Setting PYENV_VERSION explicitly makes sure they do.
        # See https://github.com/microsoft/pyright/discussions/4420 for more info on pyright vs pyenv
        # See ~/.config/zsh/zshrc file for more information on the PYENV_* env vars
        PYENV_VERSION="$(echo $PYENV_VIRTUAL_ENV | rev | cut -d/ -f1 | rev)" $EDITOR $@
    fi
}
alias x="exit"
alias py="ipython"
alias open="xdg-open"
alias copy="xclip -selection c"
alias diff='diff --color=auto'
alias grep='grep --color=auto'
alias ls="ls --color=auto"
alias l="ls -lah"
alias rm="echo Don\'t use rm, use trash-put instead. Or use \\rm if you really want to.; false"
alias tp="trash-put"
alias tl="trash-list"
alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts"
alias ranger="TERM=screen-256color ranger"

# Taken from https://github.com/sharkdp/bat#highlighting---help-messages
alias bathelp='bat --plain --language=help'
help() {
    "$@" --help 2>&1 | bathelp
}

ec2() {
    aws ec2 describe-instances | jq -r '{attributes:[ .Reservations[].Instances[] | { name: (try (.Tags[] | select (.Key as $key | "Name" | IN($key)).Value) // "undefined"), type: .InstanceType, status: .State.Name, ip: .PrivateIpAddress, id: .InstanceId } ]} |.attributes|=sort_by(.name)|.attributes | (.[0]|keys_unsorted|(.,map(length*"-"))),.[]|map(.)|@tsv' | column -ts $'\t'
}

s3url() {
    echo $1 | sed -E 's@https://s3\.console\.aws\.amazon\.com/s3/(buckets|object)/(.*)\?.*prefix=([^&]*).*@s3://\2/\3@'
}
